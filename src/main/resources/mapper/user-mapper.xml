<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- TODO 3.4 Mapper接口的映射文件
   namespace：Mapper接口的全限定名
   -->
<mapper namespace="com.lemon.community.mapper.UserMapper">

    <!-- 把公共的查询语句抽取出来，进行复用   -->
    <sql id="selectFields">
        id,username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <sql id="insertFields">
        username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <!-- User selectById(int id);
     resultType：返回值类型
     -->
    <select id="selectById" resultType="com.lemon.community.entity.User">
        select id,username,password,salt,email,type,status,activation_code,header_url,create_time
        from user
        where id = #{id}
    </select>

    <!-- User selectByName(String username);   -->
    <select id="selectByName" resultType="com.lemon.community.entity.User">
        select <include refid="selectFields"/>
        from user
        where username = #{username}
    </select>

    <!-- User selectByEmail(String email);   -->
    <select id="selectByEmail" resultType="com.lemon.community.entity.User">
        select <include refid="selectFields"/>
        from user
        where email = #{email}
    </select>

    <!-- int insertUser(User user);
    parameterType：参数类型
    keyProperty：对应的主键。开启useGeneratedKeys后，MyBatis自动获取自增主键，填到创建的User对象中
        username,password,salt,email,type,status,activation_code,header_url,create_time
    -->
    <insert id="insertUser" parameterType="com.lemon.community.entity.User" keyProperty="id">
        insert into user (<include refid="insertFields"/>)
        values (#{username}, #{password}, #{salt}, #{email}, #{type}, #{status},
                #{activationCode}, #{headerUrl}, #{createTime})
    </insert>

    <!-- int updateStatus(int id, int status);   -->
    <update id="updateStatus">
        update user set status = #{status}
        where id = #{id}
    </update>

    <!-- int updateHeader(int id, String headerUrl);   -->
    <update id="updateHeader">
        update user set header_url = #{headerUrl}
        where id = #{id}
    </update>

    <!-- int updatePassword(int id, String password);   -->
    <update id="updatePassword">
        update user set password = #{password}
        where id = #{id}
    </update>

</mapper>